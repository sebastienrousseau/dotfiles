# ------ general ------------------------------------

# use 256 colors
set -g default-terminal "screen-256color"
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

setw -g xterm-keys on       # enable xterm keys

set -s escape-time 10       # faster command sequences
set -sg repeat-time 600     # increase repeat timeout

set -g prefix2 C-a          # GNU-Screen compatible prefix
bind C-a send-prefix -2     # GNU-Screen compatible prefix

set -q -g status-utf8 on    # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on          # expect UTF-8 (tmux < 2.2)

set -g history-limit 5000   # boost history


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# rename-window
set -wg allow-rename off # disable window renaming
set -wg automatic-rename off # disable automatic window renaming

set -wg mode-keys vi # vi mode

# activity
set -g monitor-activity on # monitor for activity
set -g visual-activity off # disable visual activity

# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# session navigation
bind BTab switch-client -l  # move to last session

bind - split-window -v      # split current window vertically
bind _ split-window -h      # split current window horizontally

# pane navigation
bind -r h select-pane -L    # move left
bind -r j select-pane -D    # move down
bind -r k select-pane -U    # move up
bind -r l select-pane -R    # move right
bind > swap-pane -D         # swap current pane with the next one
bind < swap-pane -U         # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 2  # resize left
bind -r J resize-pane -D 2  # resize down
bind -r K resize-pane -U 2  # resize up
bind -r L resize-pane -R 2  # resize right

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"


######################
#### Key Bindings ####
######################

# quickly open a new window
bind N new-window


# last-window
bind a last

# split window and fix path for tmux 1.9
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# restart and edit
bind r source ~/.tmux.conf\; display "bmux config sourced"
bind e neww -n tmux-config "\${EDITOR:-vim} ~/.tmux.conf"

# pane movement shortcuts
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# ------ status theme -------------------------------
set-option -g default-terminal "screen-256color"
set -g message-style "bg=#14222a, fg=#c7c7c7"        # tomorrow night blue, base3

set -g status-style "bg=#14222a, fg=#c7c7c7"   # tomorrow night blue, base3

if 'uname -s | grep -q Darwin' 'set -g status-left "#[bg=#000000]  macOS ❐ #S "'

if 'uname -s | grep -q Linux' 'set -g status-left "#[bg=#000000] 🐧 Linux ❐ #S "'

set -g status-left-length 400
set -g status-right "#{?client_prefix, ⌨ , } #[bg=#027bff] #(whoami)@#h #[bg=red] %Y-%m-%d %H:%M "
set -g status-right-length 600

set -g set-clipboard on
set -g history-limit 102400

set -wg window-status-format " #I #W "
set -wg window-status-current-format " #I #W "
set -wg window-status-separator ""
set -wg window-status-current-style "bg=red" # red
set -wg window-status-last-style "fg=#585858" # grey

set -wg pane-active-border-style "fg=blue"
set -wg pane-border-style "fg=#585858"       # base01


# Linux only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow,
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
