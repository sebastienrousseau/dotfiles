name: Dotfiles Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16]

    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm build
      - name: Test
        run: pnpm test
      - name: Publish
        if: github.ref == 'refs/heads/main'
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Enable pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-
      - name: Install dependencies
        run: |
          run: pnpm install --frozen-lockfile
      - name: Build pnpm
        run: |
          pnpm build
      # Save the npmjs auth token so that the workflow can publish packages to the registry
      - name: Configure npm auth token
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_ACCESS_TOKEN }}" > ~/.npmrc
      - name: Publish packages
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          pnpm -r publish --access public
      # Publish the release to GitHub
      - name: Publish release
        if: ${{ steps.release.outputs.releases_created }}
        uses: softprops/action-gh-release@v1
        with:
          files: |
            packages/*/dist/*.tgz
            packages/*/dist/*.zip
          draft: true
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
